#!/bin/bash

red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
bold='\033[1m'
underline='\033[4m'
plain='\033[0m'

tip="${green}[tip]${plain}"
installing="${green}[installing]${plain}"
installed="${yellow}[installed]${plain}"
error="${red}[error]${plain}"
removed="${yellow}[removed]${plain}"

REPOSITORY_NAME="dotfiles"
REPOSITORY_URL="https://github.com/niniconi/${REPOSITORY_NAME}.git"
NEED_DELETE_REPOSITORY=false

REPOSITORY_PATH=""
CONFIG_PATH=""

# while select in select panel,$SELECT will save result
# select panel is generated by select_panel()
SELECT=""


# get_config_names
CONF_NAMES=()
CONF_IGNORE=(.git README.md install.sh screenshot)

delete_repository(){
    if [ $NEED_DELETE_REPOSITORY == true ];then
        cd ..
        if [ -d "./${REPOSITORY_NAME}" ];then
            rm "./${REPOSITORY_NAME}" -rf
            printf "${removed}:./${REPOSITORY_NAME}\n"
        fi
    fi
}

clear_screen(){
    for ((i=0;i<${1};i++));do
        printf "\e[K"
        printf "\e[1A"
    done
}

select_panel(){
    select_id=1
    selectors=""

    printf "\n$1\n\n"

    prev_cnt=0
    for i in $1;do
        prev_cnt=`expr $prev_cnt + 1`
    done

    for text in $@;do
        if [ $prev_cnt == 0 ];then
            printf "   (${select_id})  ${underline}${bold}${text}${plain}\n"

            selectors="${selectors}/${select_id}"
            select_id=`expr $select_id + 1`
        else
            prev_cnt=`expr $prev_cnt - 1`
        fi
    done

    printf "   (a)  ${underline}${bold}all${plain}\n"
    printf "   (q)  ${underline}${bold}quit${plain}\n"
    printf "\n"

    selectors="${selectors}/a/q"
    printf "${bold}"
    read -p "Input your select(${selectors}):" SELECT
    printf "${plain}"

    clear_screen `expr $select_id + 6`
}

execute_exist(){
    is_ok=true
    apps=""

    for e in $*;do
        which ${e} > /dev/null 2>&1
        if [ $? == 1 ];then
            apps="${apps} ${red}${e}${plain}"
            is_ok=false
        else
            apps="${apps} ${green}${e}${plain}"
        fi
    done


    if [ $is_ok != true ];then
        printf "Make sure you installed the following programs (red is not install): ${apps} \n"
        exit 1
    else
        return 0
    fi
}

get_config_names(){
    temp=$(ls)

    index=0
    for i in $temp;do
        if [[ ! "${CONF_IGNORE[@]}" =~ "${i}" ]];then
            CONF_NAMES[$index]=$i
            index=`expr $index + 1`
        fi
    done

}

install_config_file(){
    if [ -f ${1} ];then
        mkdir -p ${2}
        cp ${1} ${2}
    fi
}
install_config_dir(){
    if [ -d ${1} ];then
        mkdir -p ${2}
        cp ${1} ${2} -r
    fi
}

execute_install_script(){
    CONFIG_PATH="${REPOSITORY_PATH}/${1}"

    printf "${installing}:${1} configuration\n"
    source ./${1}/install.sh
    if [ $? == 0 ];then
        printf "${installed}:${1} configuration\n"
    else
        printf "${error}:install ${1} configuration failed\n"
    fi

    printf "\n"
}

main(){
    REPOSITORY_PATH=$(pwd)

    execute_exist wget git

    if [ ! -d "../${REPOSITORY_NAME}" ];then
        NEED_DELETE_REPOSITORY=true
        if [ ! -d "./${REPOSITORY_NAME}" ];then
            git clone ${REPOSITORY_URL}
        fi
        cd "${REPOSITORY_NAME}"
    fi

    get_config_names

    while true
    do
        select_panel "Select configuration you want to install:" ${CONF_NAMES[*]}


        if [ "${SELECT}" == "q" ];then
            break
        elif [ "${SELECT}" == "a" ];then
            for i in ${CONF_NAMES[*]};do
                execute_install_script $i
            done
        elif [ "$SELECT" != "" ] && grep '^[[:digit:]]*$' <<< "$SELECT" >/dev/null;then
            execute_install_script ${CONF_NAMES[`expr $SELECT-1`]}
        fi
    done

    delete_repository
}

main $@
